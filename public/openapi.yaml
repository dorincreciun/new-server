openapi: 3.0.3
info:
  title: API
  version: 1.0.0
  description: API pentru sistemul de autorizare cu JWT
servers:
  - url: http://localhost:3000
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    User:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          minLength: 6
        name:
          type: string
    UserDTO:
      type: object
      required: [id, email]
      properties:
        id:
          type: string
        email:
          type: string
          format: email
        name:
          type: string
    AuthResponse:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/UserDTO'
    LogoutResponse:
      type: object
      properties:
        message:
          type: string
    Error:
      type: object
      properties:
        message:
          type: string
paths:
  /auth/register:
    post:
      summary: Register a new user
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: User created successfully
          headers:
            Set-Cookie:
              description: Access and refresh tokens set as HTTP-only cookies
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '400':
          description: Invalid input or email already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /auth/login:
    post:
      summary: Login user
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
      responses:
        '200':
          description: Login successful
          headers:
            Set-Cookie:
              description: Access and refresh tokens set as HTTP-only cookies
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /auth/refresh:
    post:
      summary: Refresh access token
      tags:
        - Auth
      responses:
        '200':
          description: Token refreshed successfully
          headers:
            Set-Cookie:
              description: New access and refresh tokens set as HTTP-only cookies
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '401':
          description: Invalid or expired refresh token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      summary: Refresh access token
      tags:
        - Auth
      responses:
        '200':
          description: Token refreshed successfully
          headers:
            Set-Cookie:
              description: New access and refresh tokens set as HTTP-only cookies
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '401':
          description: Invalid or expired refresh token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /auth/me:
    get:
      summary: Returnează utilizatorul autentificat
      tags:
        - Auth
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /auth/logout:
    post:
      summary: Logout user
      tags:
        - Auth
      responses:
        '200':
          description: Logout successful
          headers:
            Set-Cookie:
              description: Access and refresh tokens cleared
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogoutResponse'
tags:
  - name: Auth
    description: Operațiuni de autentificare și gestionare utilizatori cu cookie-uri HTTP-Only
