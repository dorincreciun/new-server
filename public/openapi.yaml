openapi: 3.0.3
info:
  title: API
  version: 1.0.0
  description: 'API public. Autentificare prin cookie HTTP-Only; clientul trebuie să folosească credentials: ''include''.'
servers:
  - url: http://localhost:3000
components:
  schemas:
    UserDTO:
      type: object
      required:
        - id
        - email
      properties:
        id:
          type: integer
          example: 1
        email:
          type: string
          format: email
          example: user@example.com
        name:
          type: string
          example: Ion Popescu
    AuthResponse:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/UserDTO'
    LogoutResponse:
      type: object
      properties:
        message:
          type: string
          example: Logged out
    AuthRegisterRequest:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          minLength: 6
        name:
          type: string
      example:
        email: user@example.com
        password: secret123
        name: Ion
    AuthLoginRequest:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
        password:
          type: string
      example:
        email: user@example.com
        password: secret123
    Error:
      type: object
      properties:
        message:
          type: string
      examples:
        MissingCredentials:
          summary: Lipsesc credențiale
          value:
            message: Emailul și parola sunt obligatorii
        WeakPassword:
          summary: Parolă prea scurtă
          value:
            message: Parola trebuie să aibă cel puțin 6 caractere
        InvalidEmail:
          summary: Email invalid
          value:
            message: Adresa de email este invalidă
        AccountExists:
          summary: Cont deja înregistrat
          value:
            message: Acest cont a fost deja înregistrat
        AccountNotFound:
          summary: Cont inexistent
          value:
            message: Acest cont nu există
        WrongPassword:
          summary: Parolă incorectă
          value:
            message: Parola incorectă
        Unauthorized:
          summary: Neautorizat
          value:
            message: Unauthorized
        ServerError:
          summary: Eroare server
          value:
            message: Eroare internă a serverului
    ProductWithRelations:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        price:
          type: number
        minPrice:
          type: number
        maxPrice:
          type: number
        imageUrl:
          type: string
        popularity:
          type: integer
        isCustomizable:
          type: boolean
        releasedAt:
          type: string
          format: date-time
        ratingAverage:
          type: number
        ratingCount:
          type: integer
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        category:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
            slug:
              type: string
        flags:
          type: array
          items:
            type: object
            properties:
              key:
                type: string
              label:
                type: string
        ingredients:
          type: array
          items:
            type: object
            properties:
              key:
                type: string
              label:
                type: string
        variants:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              price:
                type: number
              isDefault:
                type: boolean
              doughType:
                type: object
                properties:
                  key:
                    type: string
                  label:
                    type: string
              sizeOption:
                type: object
                properties:
                  key:
                    type: string
                  label:
                    type: string
    BrowseResponse:
      type: object
      properties:
        message:
          type: string
        data:
          type: array
          items:
            $ref: '#/components/schemas/ProductWithRelations'
        pagination:
          type: object
          properties:
            page:
              type: integer
            limit:
              type: integer
            total:
              type: integer
    Category:
      type: object
      required:
        - name
      properties:
        id:
          type: integer
          description: ID-ul unic al categoriei
          example: 1
        slug:
          type: string
          description: Identificator URL-friendly al categoriei
          example: carne
        name:
          type: string
          description: Numele categoriei
          example: Carne
        description:
          type: string
          description: Descrierea categoriei
          example: Produse din carne
        createdAt:
          type: string
          format: date-time
          description: Data și ora creării
          example: '2024-01-15T10:30:00Z'
        updatedAt:
          type: string
          format: date-time
          description: Data și ora ultimei actualizări
          example: '2024-01-15T10:30:00Z'
    CreateCategoryRequest:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          description: Numele categoriei
          example: Carne
        description:
          type: string
          description: Descrierea categoriei
          example: Produse din carne de porc, vită, pui
    UpdateCategoryRequest:
      type: object
      properties:
        name:
          type: string
          description: Numele categoriei
          example: Carne și mezeluri
        description:
          type: string
          description: Descrierea categoriei
          example: Produse din carne și mezeluri
    CategoryResponse:
      type: object
      properties:
        message:
          type: string
          example: Categoria a fost creată cu succes
        data:
          $ref: '#/components/schemas/Category'
    CategoryListResponse:
      type: object
      properties:
        message:
          type: string
          example: Categoriile au fost obținute cu succes
        data:
          type: array
          items:
            $ref: '#/components/schemas/Category'
        count:
          type: integer
          example: 5
    CategoryStatsResponse:
      type: object
      properties:
        message:
          type: string
          example: Statisticile categoriilor au fost obținute cu succes
        data:
          type: object
          properties:
            totalCategories:
              type: integer
              example: 10
    ErrorResponse:
      type: object
      properties:
        error:
          type: string
          example: Eroare de validare
    Product:
      type: object
      required:
        - name
        - price
        - categoryId
      properties:
        id:
          type: integer
          description: ID-ul unic al produsului
          example: 1
        name:
          type: string
          description: Numele produsului
          example: Carne de porc
        description:
          type: string
          description: Descrierea produsului
          example: Carne de porc proaspătă
        price:
          type: number
          format: decimal
          description: Prețul produsului
          example: 25.5
        stock:
          type: integer
          description: Cantitatea în stoc
          example: 100
        categoryId:
          type: integer
          description: ID-ul categoriei
          example: 1
        createdAt:
          type: string
          format: date-time
          description: Data și ora creării
          example: '2024-01-15T10:30:00Z'
        updatedAt:
          type: string
          format: date-time
          description: Data și ora ultimei actualizări
          example: '2024-01-15T10:30:00Z'
        category:
          $ref: '#/components/schemas/Category'
    CreateProductRequest:
      type: object
      required:
        - name
        - price
        - categoryId
      properties:
        name:
          type: string
          description: Numele produsului
          example: Carne de porc
        description:
          type: string
          description: Descrierea produsului
          example: Carne de porc proaspătă
        price:
          type: number
          format: decimal
          description: Prețul produsului
          example: 25.5
        stock:
          type: integer
          description: Cantitatea în stoc
          example: 100
        categoryId:
          type: integer
          description: ID-ul categoriei
          example: 1
    UpdateProductRequest:
      type: object
      properties:
        name:
          type: string
          description: Numele produsului
          example: Carne de porc premium
        description:
          type: string
          description: Descrierea produsului
          example: Carne de porc premium proaspătă
        price:
          type: number
          format: decimal
          description: Prețul produsului
          example: 30
        stock:
          type: integer
          description: Cantitatea în stoc
          example: 150
        categoryId:
          type: integer
          description: ID-ul categoriei
          example: 1
    UpdateStockRequest:
      type: object
      required:
        - stock
      properties:
        stock:
          type: integer
          description: Noua cantitate în stoc
          example: 200
    ProductResponse:
      type: object
      properties:
        message:
          type: string
          example: Produsul a fost creat cu succes
        data:
          $ref: '#/components/schemas/Product'
    ProductListResponse:
      type: object
      properties:
        message:
          type: string
          example: Produsele au fost obținute cu succes
        data:
          type: array
          items:
            $ref: '#/components/schemas/Product'
        count:
          type: integer
          example: 10
    ProductStatsResponse:
      type: object
      properties:
        message:
          type: string
          example: Statisticile produselor au fost obținute cu succes
        data:
          type: object
          properties:
            totalProducts:
              type: integer
              example: 50
    LowStockResponse:
      type: object
      properties:
        message:
          type: string
          example: Produsele cu stoc scăzut au fost obținute cu succes
        data:
          type: array
          items:
            $ref: '#/components/schemas/Product'
        count:
          type: integer
          example: 5
        threshold:
          type: integer
          example: 10
  headers:
    SetCookieHeader:
      description: Header Set-Cookie care conține accesToken și refreshToken ca HTTP-only cookies
      schema:
        type: string
paths:
  /auth/register:
    post:
      summary: Register a new user
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthRegisterRequest'
      responses:
        '201':
          description: User created successfully
          headers:
            Set-Cookie:
              $ref: '#/components/headers/SetCookieHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
              examples:
                Success:
                  summary: Utilizator creat și autentificat
                  value:
                    user:
                      id: 1
                      email: user@example.com
                      name: Ion
        '400':
          description: Invalid input or account already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                MissingCredentials:
                  $ref: '#/components/schemas/Error/examples/MissingCredentials'
                WeakPassword:
                  $ref: '#/components/schemas/Error/examples/WeakPassword'
                InvalidEmail:
                  $ref: '#/components/schemas/Error/examples/InvalidEmail'
                AccountExists:
                  $ref: '#/components/schemas/Error/examples/AccountExists'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                ServerError:
                  $ref: '#/components/schemas/Error/examples/ServerError'
  /auth/login:
    post:
      summary: Login user
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthLoginRequest'
      responses:
        '200':
          description: Login successful
          headers:
            Set-Cookie:
              $ref: '#/components/headers/SetCookieHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
              examples:
                Success:
                  value:
                    user:
                      id: 1
                      email: user@example.com
                      name: Ion
        '400':
          description: Missing credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                MissingCredentials:
                  $ref: '#/components/schemas/Error/examples/MissingCredentials'
                InvalidEmail:
                  $ref: '#/components/schemas/Error/examples/InvalidEmail'
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                AccountNotFound:
                  $ref: '#/components/schemas/Error/examples/AccountNotFound'
                WrongPassword:
                  $ref: '#/components/schemas/Error/examples/WrongPassword'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                ServerError:
                  $ref: '#/components/schemas/Error/examples/ServerError'
  /auth/me:
    get:
      summary: Returnează utilizatorul autentificat
      tags:
        - Auth
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
              examples:
                Success:
                  value:
                    user:
                      id: 1
                      email: user@example.com
                      name: Ion
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Unauthorized:
                  $ref: '#/components/schemas/Error/examples/Unauthorized'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                ServerError:
                  $ref: '#/components/schemas/Error/examples/ServerError'
  /auth/logout:
    post:
      summary: Logout user
      tags:
        - Auth
      responses:
        '200':
          description: Logout successful
          headers:
            Set-Cookie:
              description: Cookies cleared (accessToken, refreshToken)
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogoutResponse'
              examples:
                Success:
                  value:
                    message: Logged out
        '500':
          description: Internal server error (logout still clears cookies and returns 200 in implementation)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                ServerError:
                  $ref: '#/components/schemas/Error/examples/ServerError'
  /browse/products:
    get:
      summary: Filtrează și sortează produsele
      description: Endpoint principal pentru filtrarea produselor cu suport pentru toate tipurile de filtre
      tags:
        - Browse
      parameters:
        - in: query
          name: q
          schema:
            type: string
          description: Căutare full-text în nume și descriere
          example: cheese
        - in: query
          name: categorySlug
          schema:
            type: string
          description: Slug-ul categoriei
          example: pizza
        - in: query
          name: priceMin
          schema:
            type: number
          description: Prețul minim (filtrare pe minPrice)
          example: 200
        - in: query
          name: priceMax
          schema:
            type: number
          description: Prețul maxim (filtrare pe minPrice)
          example: 500
        - in: query
          name: flags
          schema:
            type: string
          description: Flaguri separate prin virgulă sau flags[]=a&flags[]=b
          example: spicy,vegetarian
        - in: query
          name: ingredients
          schema:
            type: string
          description: Ingrediente separate prin virgulă sau ingredients[]=a&ingredients[]=b
          example: mozzarella,tomato
        - in: query
          name: dough
          schema:
            type: string
          description: Tipul de aluat
          example: thin
        - in: query
          name: size
          schema:
            type: string
          description: Mărimea
          example: 30cm
        - in: query
          name: isCustomizable
          schema:
            type: boolean
          description: Filtrează produsele care pot fi personalizate
          example: true
        - in: query
          name: isNew
          schema:
            type: boolean
          description: Filtrează produsele noi (releasedAt în ultimele newerThanDays zile)
          example: true
        - in: query
          name: newerThanDays
          schema:
            type: integer
            default: 30
          description: Numărul de zile pentru care produsul este considerat nou
        - in: query
          name: sort
          schema:
            type: string
            enum:
              - price
              - rating
              - popularity
              - newest
            default: newest
          description: Criteriul de sortare (price sortează după minPrice)
        - in: query
          name: order
          schema:
            type: string
            enum:
              - asc
              - desc
            default: desc
          description: Ordinea de sortare
        - in: query
          name: page
          schema:
            type: integer
            minimum: 1
            default: 1
          description: Numărul paginii
        - in: query
          name: limit
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
          description: Numărul de produse per pagină
      responses:
        '200':
          description: Lista filtrată de produse
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrowseResponse'
              examples:
                Success:
                  summary: Produse filtrate cu succes
                  value:
                    message: Produsele au fost filtrate cu succes
                    data:
                      - id: 1
                        name: Чизбургер-пицца
                        price: 399
                        minPrice: 399
                        maxPrice: 499
                        flags:
                          - key: spicy
                            label: Picant
                        ingredients:
                          - key: mozzarella
                            label: Mozzarella
                          - key: tomato
                            label: Roșii
                        variants:
                          - id: 1
                            price: 399
                            isDefault: true
                            sizeOption:
                              key: 30cm
                              label: 30cm
                        category:
                          id: 1
                          slug: pizza
                          name: Пиццы
                    pagination:
                      page: 1
                      limit: 10
                      total: 65
        '422':
          description: Parametri invalizi
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        field:
                          type: string
                        message:
                          type: string
        '500':
          description: Eroare internă a serverului
  /browse/filters:
    get:
      summary: Obține opțiunile de filtrare disponibile
      description: Returnează toate opțiunile de filtrare cu numărul de produse pentru fiecare. Fără categorySlug → filtre globale; cu categorySlug → filtre contextuale (ținând cont de ceilalți parametri).
      tags:
        - Browse
      parameters:
        - in: query
          name: q
          schema:
            type: string
          description: Căutare full-text în nume și descriere
        - in: query
          name: categorySlug
          schema:
            type: string
          description: Slug-ul categoriei pentru filtrare specifică
          example: pizza
        - in: query
          name: priceMin
          schema:
            type: number
          description: Prețul minim (filtrare pe minPrice)
        - in: query
          name: priceMax
          schema:
            type: number
          description: Prețul maxim (filtrare pe minPrice)
        - in: query
          name: flags
          schema:
            type: string
          description: Flaguri CSV sau flags[]=a&flags[]=b
        - in: query
          name: ingredients
          schema:
            type: string
          description: Ingrediente CSV sau ingredients[]=a&ingredients[]=b
        - in: query
          name: dough
          schema:
            type: string
          description: Tip aluat
        - in: query
          name: size
          schema:
            type: string
          description: Mărime
        - in: query
          name: isCustomizable
          schema:
            type: boolean
        - in: query
          name: isNew
          schema:
            type: boolean
        - in: query
          name: newerThanDays
          schema:
            type: integer
            default: 30
      responses:
        '200':
          description: Opțiunile de filtrare
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      flags:
                        type: array
                        items:
                          type: object
                          properties:
                            key:
                              type: string
                            label:
                              type: string
                            count:
                              type: integer
                      ingredients:
                        type: array
                        items:
                          type: object
                          properties:
                            key:
                              type: string
                            label:
                              type: string
                            count:
                              type: integer
                      doughTypes:
                        type: array
                        items:
                          type: object
                          properties:
                            key:
                              type: string
                            label:
                              type: string
                            count:
                              type: integer
                      sizeOptions:
                        type: array
                        items:
                          type: object
                          properties:
                            key:
                              type: string
                            label:
                              type: string
                            count:
                              type: integer
                      price:
                        type: object
                        properties:
                          min:
                            type: number
                          max:
                            type: number
  /cart:
    get:
      summary: Obține coșul curent al utilizatorului
      tags:
        - Cart
      responses:
        '200':
          description: OK
    delete:
      summary: Golește coșul utilizatorului
      tags:
        - Cart
  /cart/items:
    post:
      summary: Adaugă o variantă de produs în coș (sau crește cantitatea dacă există)
      tags:
        - Cart
  /cart/items/{itemId}:
    patch:
      summary: Actualizează cantitatea unui item din coș
      tags:
        - Cart
    delete:
      summary: Elimină un item din coș
      tags:
        - Cart
  /categories:
    get:
      summary: Obține toate categoriile
      description: Returnează o listă cu toate categoriile din sistem, sortate alfabetic după nume.
      tags:
        - Categories
      responses:
        '200':
          description: Lista cu toate categoriile
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Category'
        '500':
          description: Eroare internă a serverului
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                ServerError:
                  summary: Eroare server
                  value:
                    error: Eroare internă a serverului
  /categories/{slug}:
    get:
      summary: Obține o categorie după slug
      tags:
        - Categories
      parameters:
        - in: path
          name: slug
          required: true
          schema:
            type: string
          description: Slug-ul categoriei ("toate" nu este permis)
      responses:
        '200':
          description: Categoria găsită
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Category'
        '400':
          description: Slug invalid
        '404':
          description: Categoria nu a fost găsită
  /products:
    get:
      summary: Obține toate produsele (endpoint simplu)
      tags:
        - Products
      responses:
        '200':
          description: Lista cu toate produsele
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductListResponse'
        '500':
          description: Eroare internă a serverului
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      description: Returnează toate produsele fără filtrare avansată. Pentru filtrare complexă, folosește /browse/products.
  /products/{id}:
    get:
      summary: Obține un produs după ID
      tags:
        - Products
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID-ul produsului
          example: 1
      responses:
        '200':
          description: Produsul a fost găsit
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductResponse'
        '400':
          description: ID invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Produsul nu a fost găsit
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Eroare internă a serverului
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /taxonomies/ingredients:
    get:
      summary: Listează ingredientele disponibile
      tags:
        - Taxonomies
      description: Returnează lista cu toate ingredientele disponibile pentru pizza
      responses:
        '200':
          description: Lista cu ingredientele
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        key:
                          type: string
                        label:
                          type: string
  /taxonomies/flags:
    get:
      summary: Listează flagurile disponibile
      tags:
        - Taxonomies
      description: Returnează lista cu toate flagurile disponibile pentru filtrare
      responses:
        '200':
          description: Lista cu flagurile
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        key:
                          type: string
                        label:
                          type: string
  /taxonomies/dough-types:
    get:
      summary: Listează tipurile de aluat disponibile
      tags:
        - Taxonomies
      description: Returnează lista cu toate tipurile de aluat disponibile
      responses:
        '200':
          description: Lista cu tipurile de aluat
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        key:
                          type: string
                        label:
                          type: string
  /taxonomies/size-options:
    get:
      summary: Listează opțiunile de mărime disponibile
      tags:
        - Taxonomies
      description: Returnează lista cu toate mărimile disponibile pentru pizza
      responses:
        '200':
          description: Lista cu mărimile
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        key:
                          type: string
                        label:
                          type: string
tags:
  - name: Auth
    description: Operațiuni de autentificare și gestionare utilizatori cu cookie-uri HTTP-Only
  - name: Browse
    description: Filtrare și căutare avansată de produse
  - name: Cart
    description: Coș de cumpărături per utilizator (autentificat)
  - name: Categories
    description: Gestionarea categoriilor de produse
  - name: Products
    description: Gestionarea produselor și căutarea după categorii
  - name: Taxonomies
    description: Endpoint-uri pentru obținerea datelor de taxonomie (ingrediente, flaguri, variante) - DOAR CITIRE
